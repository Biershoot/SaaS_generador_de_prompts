version: '3.8'

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: prompt-saas-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: prompt_saas
      MYSQL_USER: prompt_user
      MYSQL_PASSWORD: prompt_pass
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./src/main/resources/db/init:/docker-entrypoint-initdb.d
    networks:
      - prompt-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Spring Boot Application
  app:
    build: .
    container_name: prompt-saas-app
    environment:
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/prompt_saas?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: prompt_user
      SPRING_DATASOURCE_PASSWORD: prompt_pass
      
      # JPA Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: true
      
      # Flyway Configuration
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_LOCATIONS: classpath:db/migration
      
      # JWT Configuration (for development)
      JWT_SECRET: dev-jwt-secret-key-change-in-production
      JWT_EXPIRATION: 18000
      
      # Stripe Configuration (use test keys for development)
      STRIPE_SECRET_KEY: sk_test_xxxxxxxxxxxxxxxxxxxxxx
      STRIPE_WEBHOOK_SECRET: whsec_xxxxxxxxxxxxxxxxxxxxxx
      STRIPE_PUBLISHABLE_KEY: pk_test_xxxxxxxxxxxxxxxxxxxxxx
      
      # AI Provider Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY:}
      CLAUDE_API_KEY: ${CLAUDE_API_KEY:}
      STABLE_DIFFUSION_API_KEY: ${STABLE_DIFFUSION_API_KEY:}
      
      # CORS Configuration
      APP_CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:8080
      
      # Logging
      LOGGING_LEVEL_COM_ALEJANDRO: DEBUG
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: INFO
      
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - prompt-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: prompt-saas-redis
    ports:
      - "6379:6379"
    networks:
      - prompt-network
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  prompt-network:
    driver: bridge
